@using Analyze.Shared.Common.Report;
@model ParList

@*基础信息保存*@
@if (Model.ParMaterials != null)
{
    using (Html.BeginForm("Index", "EmployeeReportRead", FormMethod.Post,
                new { @class = "form-horizontal", role = "form" }))
    {
        @Html.AntiForgeryToken()
        <div class="form-group">

            @foreach (var item in Model.ParMaterials)
            {
                <div class="text-center">
                    <button class="btn btn-link btn-lg" type="button" onclick="showFile(4)"><i class="glyphicon glyphicon-refresh"></i>点击此处刷新当前模块</button>/
                    <button class="btn btn-link btn-lg" type="button" data-toggle="collapse" data-parent="#accordion" href="#collapseMaterialsLog">
                        <i class="glyphicon glyphicon-list"></i>点击此处展开/收缩日志
                    </button>
                    <div id="collapseMaterialsLog" class="panel-collapse collapse">
                        @Html.TextAreaFor(m => item.log_result, new { @class = "form-control", @id = "txtLogResultMaterials", @autocomplete = "off", @readonly = "true", @rows = "5" })
                    </div>
                </div>
                <div class="form-horizontal">
                    <label>物料1排查步骤</label>
                    @Html.TextAreaFor(m => item.materials_steps_1, new
                        {
                            @id = "txtMaterials_steps_1",
                            @class = "form-control placeholder-no-fix",
                            @autocomplete = "off",
                            @rows = "5",
                            @placeholder = "待补充物料1排查步骤...",
                            @readonly = true,
                            @style = "background-color:white"
                        })
                </div>
                <div class="form-horizontal">
                    <label>物料2排查步骤</label>
                    @Html.TextAreaFor(m => item.materials_steps_2, new
                                    {
                                        @id = "txtMaterials_steps_2",
                                        @class = "form-control placeholder-no-fix",
                                        @autocomplete = "off",
                                        @rows = "5",
                                        @placeholder = "待补充物料2排查步骤...",
                                        @readonly = true,
                                        @style = "background-color:white"
                                    })
                </div>
                <div class="form-horizontal">
                    <label>物料3排查步骤</label>
                    @Html.TextAreaFor(m => item.materials_steps_3, new
                                    {
                                        @id = "txtMaterials_steps_3",
                                        @class = "form-control placeholder-no-fix",
                                        @autocomplete = "off",
                                        @rows = "5",
                                        @placeholder = "待补充物料3排查步骤...",
                                        @readonly = true,
                                        @style = "background-color:white"
                                    })
                </div>
                <div class="form-horizontal">
                    <label>物料4排查步骤</label>
                    @Html.TextAreaFor(m => item.materials_steps_4, new
                                    {
                                        @id = "txtMaterials_steps_4",
                                        @class = "form-control placeholder-no-fix",
                                        @autocomplete = "off",
                                        @rows = "5",
                                        @placeholder = "待补充物料4排查步骤...",
                                        @readonly = true,
                                        @style = "background-color:white"
                                    })
                </div>
            }
            <br />
            @*执行成功/失败提示*@
            <div id="saveMaterialsAlert"><br /></div>

            @if (Model.ViewParFile != null)
            {
                <div class="form-horizontal">
                    <br />
                    <table class="table table-bordered table-hover" id="table_Materials">
                        <caption class="text-center">
                            <div class="input-group">
                                <span class="input-group-addon">附件分类：</span>
                                <select class="form-control" style="width:150px" onchange="onSearch(this)" value="">
                                    <option value="">全选</option>
                                    <option value="物料1">物料1</option>
                                    <option value="物料2">物料2</option>
                                    <option value="物料3">物料3</option>
                                    <option value="物料4">物料4</option>
                                </select>
                            </div>
                            附件列表
                        </caption>
                        <thead>
                            <tr>
                                <th>文件名称</th>
                                <th>分类</th>
                                <th>信息</th>
                                <th>操作</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model.ViewParFile)
                            {
                                <tr>
                                    <td>@Html.DisplayFor(m => item.file_name)</td>
                                    <td>@Html.DisplayFor(m => item.category_chil)</td>
                                    <td>
                                        @Html.DisplayFor(m => item.update_time)
                                        <span>by</span>
                                        @Html.DisplayFor(m => item.user_detailed)
                                    </td>
                                    <td>@Html.ActionLink("下载", "DownloadFile", new { filePath = item.file_url })</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
        </div>
    }
}


        <script type="text/javascript">
            //下拉筛选
            function onSearch(obj) {//js函数开始
                setTimeout(function () {//因为是即时查询，需要用setTimeout进行延迟，让值写入到input内，再读取
                    var storeId = document.getElementById('table_Materials');//获取table的id标识
                    var rowsLength = storeId.rows.length;//表格总共有多少行
                    var key = obj.value;//获取输入框的值
                    var searchCol = 1;//要搜索的哪一列，这里是第一列，从0开始数起
                    for (var i = 1; i < rowsLength; i++) {//按表的行数进行循环，第一行是标题，所以i=1，从第二行开始筛选（从0数起）
                        var searchText = storeId.rows[i].cells[searchCol].innerHTML;//取得table行，列的值
                        if (searchText.match(key)) {//用match函数进行筛选，如果input的值，即变量 key的值为空，返回的是ture，
                            storeId.rows[i].style.display = '';//显示行操作，
                        } else {
                            storeId.rows[i].style.display = 'none';//隐藏行操作
                        }
                    }
                }, 200);//200为延时时间
            }
        </script>
