@using Analyze.Shared.Common.Report;
@model ParList
<style type="text/css">
    #table_Materials {
        table-layout: fixed;
        font-size: 6px;
    }

        #table_Materials td {
            word-break: keep-all; /* 不换行 */
            white-space: nowrap; /* 不换行 */
            overflow: hidden; /* 内容超出宽度时隐藏超出部分的内容 */
            text-overflow: ellipsis; /* 当对象内文本溢出时显示省略标记(...) ；需与overflow:hidden;一起使用*/
        }
</style>
@*基础信息保存*@
@if (Model.ParMaterials != null)
{
    using (Html.BeginForm("Index", "EmployeeReportRead", FormMethod.Post,
                new { @class = "form-horizontal", role = "form" }))
    {
        @Html.AntiForgeryToken()
        <div class="form-group">

            <div class="text-center">
                <button class="btn btn-link btn-lg" type="button" onclick="showFile(4)"><i class="glyphicon glyphicon-refresh"></i>点击此处刷新当前模块</button>
            </div>
            <table class="table table-bordered table-hover" id="table_Materials">
                <thead>
                    <tr>
                        <th>异常位号</th>
                        <th>Lenovo P/N</th>
                        <th>ODM P/N</th>
                        <th>供应商</th>
                        <th>嫌疑批次</th>
                        <th>嫌疑Lot号</th>
                        <th>其他批次</th>
                        <th>其他批次数量</th>
                        <th>替代料</th>
                        <th>使用产品</th>
                        <th>近期2月/试产有无相同问题</th>
                        <th>备注</th>
                        <th>操作</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.ParMaterials)
                    {
                        <tr>
                            <td>@Html.DisplayFor(m => item.tag_number)</td>
                            <td>@Html.DisplayFor(m => item.lenovo_pn)</td>
                            <td>@Html.DisplayFor(m => item.odm_pn)</td>
                            <td>@Html.DisplayFor(m => item.supplier)</td>
                            <td>@Html.DisplayFor(m => item.suspect_batch)</td>
                            <td>@Html.DisplayFor(m => item.suspect_lot)</td>
                            <td>@Html.DisplayFor(m => item.other_batch)</td>
                            <td>@Html.DisplayFor(m => item.other_batch_number)</td>
                            <td>@Html.DisplayFor(m => item.alternative_materials)</td>
                            <td>@Html.DisplayFor(m => item.product)</td>
                            <td>@Html.DisplayFor(m => item.is_npi_issue)</td>
                            <td>@Html.DisplayFor(m => item.remark)</td>
                            <td>
                                @Html.ActionLink("详细信息", "", null, new { href = "javascript:void(0)", onclick = "MaterialsShow('" + item.id + "')" })
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
            <br />
            @*执行成功/失败提示*@
            <div id="saveMaterialsAlert"><br /></div>

            @if (Model.ViewParFile != null)
            {
                    <div class="form-horizontal">
                <br />
                <table class="table table-bordered table-hover" id="table_Materials">
                    <caption class="text-center">
                        附件列表
                    </caption>
                    <thead>
                        <tr>
                            <th>文件名称</th>
                            <th>信息</th>
                            <th>操作</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.ViewParFile)
                        {
                            <tr>
                                <td>@Html.ActionLink(item.file_name, "ShowFile", new { filePath = item.file_url }, new { target = "_blank" })</td>
                                <td>
                                    @Html.DisplayFor(m => item.update_time)
                                    <span>by</span>
                                    @Html.DisplayFor(m => item.user_detailed)
                                </td>
                                <td>@Html.ActionLink("下载", "DownloadFile", new { filePath = item.file_url })</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
            }
        </div>
    }
}

        <div class="modal fade" id="ParShowMaterialsModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
            <div class="modal-dialog" role="document" style="background-color:#fff">
                <div class="modal-header">
                    <button type="button" class="close" data-dissmiss="modal" aria-label="Close">
                        <span aria-hidden="true"></span>
                    </button>
                    <h4 class="modal-title" id="ParShowMaterialsModalLabel">详细信息</h4>
                </div>
                <div class="modal-body" id="parShowMaterialsModal-body">

                </div>
            </div>
        </div>


<script type="text/javascript">
    //下拉筛选
    function onSearch(obj) {//js函数开始
        setTimeout(function () {//因为是即时查询，需要用setTimeout进行延迟，让值写入到input内，再读取
            var storeId = document.getElementById('table_Materials');//获取table的id标识
            var rowsLength = storeId.rows.length;//表格总共有多少行
            var key = obj.value;//获取输入框的值
            var searchCol = 1;//要搜索的哪一列，这里是第一列，从0开始数起
            for (var i = 1; i < rowsLength; i++) {//按表的行数进行循环，第一行是标题，所以i=1，从第二行开始筛选（从0数起）
                var searchText = storeId.rows[i].cells[searchCol].innerHTML;//取得table行，列的值
                if (searchText.match(key)) {//用match函数进行筛选，如果input的值，即变量 key的值为空，返回的是ture，
                    storeId.rows[i].style.display = '';//显示行操作，
                } else {
                    storeId.rows[i].style.display = 'none';//隐藏行操作
                }
            }
        }, 200);//200为延时时间
    }
</script>
